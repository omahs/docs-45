"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[450],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),c=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=c(a),h=i,m=b["".concat(d,".").concat(h)]||b[h]||l[h]||r;return a?n.createElement(m,s(s({ref:t},p),{},{components:a})):n.createElement(m,s({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=b;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},5809:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const r={},s="ADR 0008: Standard Account Key Generation",o={unversionedId:"adrs/0008-standard-account-key-generation",id:"adrs/0008-standard-account-key-generation",title:"ADR 0008: Standard Account Key Generation",description:"Component",source:"@site/docs/adrs/0008-standard-account-key-generation.md",sourceDirName:"adrs",slug:"/adrs/0008-standard-account-key-generation",permalink:"/adrs/0008-standard-account-key-generation",draft:!1,editUrl:"https://github.com/oasisprotocol/adrs/edit/main/0008-standard-account-key-generation.md",tags:[],version:"current",lastUpdatedAt:1674490900,formattedLastUpdatedAt:"Jan 23, 2023",frontMatter:{},sidebar:"adrs",previous:{title:"ADR 0007: Improved Random Beacon",permalink:"/adrs/0007-improved-random-beacon"},next:{title:"ADR 0009: Ed25519 Signature Verification Semantics",permalink:"/adrs/0009-ed25519-semantics"}},d={},c=[{value:"Component",id:"component",level:2},{value:"Changelog",id:"changelog",level:2},{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Mnemonic Codes for Master Key Derivation",id:"mnemonic-codes-for-master-key-derivation",level:3},{value:"Hierarchical Key Derivation Scheme",id:"hierarchical-key-derivation-scheme",level:3},{value:"Key Derivation Paths",id:"key-derivation-paths",level:3},{value:"Rationale",id:"rationale",level:2},{value:"SLIP-0010 for Hierarchical Key Derivation Scheme",id:"slip-0010-for-hierarchical-key-derivation-scheme",level:3},{value:"Adoption",id:"adoption",level:4},{value:"Difficulties in Adapting BIP-0032 to edwards25519 Curve",id:"difficulties-in-adapting-bip-0032-to-edwards25519-curve",level:4},{value:"Shorter Key Derivation Paths",id:"shorter-key-derivation-paths",level:3},{value:"Test Vectors",id:"test-vectors",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Alternatives",id:"alternatives",level:2},{value:"BIP32-Ed25519 for Hierarchical Key Derivation",id:"bip32-ed25519-for-hierarchical-key-derivation",level:3},{value:"Adoption",id:"adoption-1",level:4},{value:"Security Concerns",id:"security-concerns",level:4},{value:"Implementation Issues",id:"implementation-issues",level:4},{value:"Tor&#39;s Next Generation Hidden Service Keys for Hierarchical Key Derivation",id:"tors-next-generation-hidden-service-keys-for-hierarchical-key-derivation",level:3},{value:"Consequences",id:"consequences",level:2},{value:"Positive",id:"positive",level:3},{value:"Negative",id:"negative",level:3},{value:"Neutral",id:"neutral",level:3},{value:"References",id:"references",level:2}],p={toc:c};function l(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"adr-0008-standard-account-key-generation"},"ADR 0008: Standard Account Key Generation"),(0,i.kt)("h2",{id:"component"},"Component"),(0,i.kt)("p",null,"Oasis Core"),(0,i.kt)("h2",{id:"changelog"},"Changelog"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2021-05-07: Add test vectors and reference implementation, extend Consequences\nsection"),(0,i.kt)("li",{parentName:"ul"},"2021-04-19: Switch from BIP32-Ed25519 to SLIP-0010 for hierarchical key\nderivation scheme"),(0,i.kt)("li",{parentName:"ul"},"2021-01-27: Initial draft")),(0,i.kt)("h2",{id:"status"},"Status"),(0,i.kt)("p",null,"Accepted"),(0,i.kt)("h2",{id:"context"},"Context"),(0,i.kt)("p",null,"Currently, each application interacting with the Oasis Network defines its own\nmethod of generating an account's private/public key pair."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/core/consensus/services/staking#accounts"},"Account"),"'s public key is in turn used to derive the account's address of the\nform ",(0,i.kt)("inlineCode",{parentName:"p"},"oasis1 ... 40 characters ...")," which is used to for a variety of operations\n(i.e. token transfers, delegations/undelegations, ...) on the network."),(0,i.kt)("p",null,"The blockchain ecosystem has developed many standards for generating keys which\nimprove key storage and interoperability between different applications."),(0,i.kt)("p",null,"Adopting these standards will allow the Oasis ecosystem to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Make key derivation the same across different applications (i.e. wallets)."),(0,i.kt)("li",{parentName:"ul"},"Allow users to hold keys in hardware wallets."),(0,i.kt)("li",{parentName:"ul"},"Allow users to hold keys in cold storage more reliably (i.e. using the\nfamiliar 24 word mnemonics)."),(0,i.kt)("li",{parentName:"ul"},"Define how users can generate multiple keys from a single seed (i.e.\nthe 24 or 12 word mnemonic).")),(0,i.kt)("h2",{id:"decision"},"Decision"),(0,i.kt)("h3",{id:"mnemonic-codes-for-master-key-derivation"},"Mnemonic Codes for Master Key Derivation"),(0,i.kt)("p",null,"We use Bitcoin's ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki"},"BIP-0039"),": ",(0,i.kt)("em",{parentName:"p"},"Mnemonic code for generating deterministic keys"),"\nto derivate a binary seed from a mnemonic code."),(0,i.kt)("p",null,"The binary seed is in turn used to derive the ",(0,i.kt)("em",{parentName:"p"},"master key"),", the root key from\nwhich a hierarchy of deterministic keys is derived, as described in\n",(0,i.kt)("a",{parentName:"p",href:"#hierarchical-key-derivation-scheme"},"Hierarchical Key Derivation Scheme"),"."),(0,i.kt)("p",null,"We strongly recommend using 24 word mnemonics which correspond to 256 bits of\nentropy."),(0,i.kt)("h3",{id:"hierarchical-key-derivation-scheme"},"Hierarchical Key Derivation Scheme"),(0,i.kt)("p",null,"We use Sathoshi Labs' ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010"),": ",(0,i.kt)("em",{parentName:"p"},"Universal private key derivation from master\nprivate key"),", which is a superset of\nBitcoin's ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032"),": ",(0,i.kt)("em",{parentName:"p"},"Hierarchical Deterministic Wallets")," derivation algorithm,\nextended to work on other curves."),(0,i.kt)("p",null,"Account keys use the ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve")," from the Ed25519 signature scheme\nspecified in ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032"},"RFC 8032"),"."),(0,i.kt)("h3",{id:"key-derivation-paths"},"Key Derivation Paths"),(0,i.kt)("p",null,"We adapt ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki"},"BIP-0044"),": ",(0,i.kt)("em",{parentName:"p"},"Multi-Account Hierarchy for Deterministic Wallets")," for\ngenerating deterministic keys where ",(0,i.kt)("inlineCode",{parentName:"p"},"coin_type")," equals 474, as assigned to the\nOasis Network by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md"},"SLIP-0044"),"."),(0,i.kt)("p",null,"The following ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032")," path should be used to generate keys:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"m/44'/474'/x'\n")),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," represents the key number."),(0,i.kt)("p",null,"Note that all path levels are ",(0,i.kt)("em",{parentName:"p"},"hardened"),", e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"44'")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"44 | 0x8000000")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"44 + 2^31"),"."),(0,i.kt)("p",null,"The key corresponding to key number 0 (i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"m/44'/474'/0'"),") is called the\n",(0,i.kt)("em",{parentName:"p"},"primary key"),"."),(0,i.kt)("p",null,"The account corresponding to the ",(0,i.kt)("em",{parentName:"p"},"primary key")," is called the ",(0,i.kt)("em",{parentName:"p"},"primary account"),".\nApplications (i.e. wallets) should use this account as a user's default Oasis\naccount."),(0,i.kt)("h2",{id:"rationale"},"Rationale"),(0,i.kt)("p",null,"BIPs and SLIPs are industry standards used by a majority of blockchain projects\nand software/hardware wallets."),(0,i.kt)("h3",{id:"slip-0010-for-hierarchical-key-derivation-scheme"},"SLIP-0010 for Hierarchical Key Derivation Scheme"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010")," defines a hierarchical key derivation scheme which is a superset of\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032")," derivation algorithm extended to work on other curves."),(0,i.kt)("p",null,"In particular, we use their adaptation for the ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve"),"."),(0,i.kt)("h4",{id:"adoption"},"Adoption"),(0,i.kt)("p",null,"It is used by Stellar (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0005.md"},"SEP-0005"),")."),(0,i.kt)("p",null,"It is supported by ",(0,i.kt)("a",{parentName:"p",href:"https://www.ledger.com/"},"Ledger")," and ",(0,i.kt)("a",{parentName:"p",href:"https://trezor.io/"},"Trezor")," hardware wallets."),(0,i.kt)("p",null,"It is commonly used by Ledger applications, including:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LedgerHQ/app-stellar/blob/fc4ec38d9abcae9bd47c95ef93feb5e1ff25961f/src/stellar.c#L42-L49"},"Stellar's Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LedgerHQ/app-solana/blob/1c72216edf4e5358f719b164a8d1b6100988b34d/src/utils.c#L42-L51"},"Solana's Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LedgerHQ/app-near/blob/40ea52a0de81d65b993a49ac705e7edad8efff0e/workdir/app-near/src/crypto/ledger_crypto.c#L24"},"NEAR Protocol's Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LedgerHQ/app-sia/blob/d4dbb5a9cae2e2389d6b6a44701069e234f0f392/src/sia.c#L14"},"Siacoin's Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LedgerHQ/app-hedera/blob/47066dcfa02379a48a65c33efb1484bb744a30a5/src/hedera.c#L21-L30"},"Hedera Hashgraph's Ledger app"),".")),(0,i.kt)("h4",{id:"difficulties-in-adapting-bip-0032-to-edwards25519-curve"},"Difficulties in Adapting BIP-0032 to edwards25519 Curve"),(0,i.kt)("p",null,"Creating a hierarchical key derivation scheme for the ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve"),'\nproved to be very challenging due to edwards25519\'s small cofactor and bit\n"clamping".'),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032")," was designed for the ",(0,i.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/Secp256k1"},"secp256k1")," elliptic curve with a prime-order\ngroup. For performance reasons, edwards25519 doesn't provide a prime-order group\nand provides a group of order ",(0,i.kt)("em",{parentName:"p"},"h")," * ",(0,i.kt)("em",{parentName:"p"},"l")," instead, where ",(0,i.kt)("em",{parentName:"p"},"h")," is a small co-factor\n(8) and ",(0,i.kt)("em",{parentName:"p"},"l")," is a 252-bit prime."),(0,i.kt)("p",null,"While using a co-factor offers better performance, it has proven to be a source\nof issues and vulnerabilities in higher-layer protocol implementations as\n",(0,i.kt)("a",{parentName:"p",href:"https://ristretto.group/why_ristretto.html#pitfalls-of-a-cofactor"},"described by Risretto authors"),"."),(0,i.kt)("p",null,'Additionally, edwards25519 curve employs bit "clamping". As ',(0,i.kt)("a",{parentName:"p",href:"https://moderncrypto.org/mail-archive/curves/2017/000874.html"},"described by Trevor\nPerrin"),', low bits are "clamped" to deal with\nsmall-subgroup attacks and high bits are "clamped" so that:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the scalar is smaller than the subgroup order, and"),(0,i.kt)("li",{parentName:"ul"},"the highest bit set is constant in case the scalar is used with a\nnon-constant-time scalar multiplication algorithm that leaks based on the\nhighest set bit.")),(0,i.kt)("p",null,"These issues were discussed on ",(0,i.kt)("a",{parentName:"p",href:"https://moderncrypto.org/"},"modern crypto"),"'s mailing list ","[[1]][\nmoderncrypto-ed25519-hd1]",", ",(0,i.kt)("a",{parentName:"p",href:"https://moderncrypto.org/mail-archive/curves/2017/000866.html"},"[2]"),"."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010")," avoids these issues because it doesn't try to support non-hardened\nparent public key to child public key derivation and only supports hardened\nprivate parent key to private child key derivation when used with the\nedwards25519 curve."),(0,i.kt)("h3",{id:"shorter-key-derivation-paths"},"Shorter Key Derivation Paths"),(0,i.kt)("p",null,"Similar to Stellar's ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0005.md"},"SEP-0005"),", we decided not to use the full ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032"),"\nderivation path specified by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki"},"BIP-0044")," because ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010"),"'s scheme for\n",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve")," only supports hardened private parent key to private child\nkey derivation and additionally, the Oasis Network is account-based rather than\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Unspent_transaction_output"},"UTXO"),"-based."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://trezor.io/"},"Trezor")," follows the same scheme for account-based blockchain networks as\ndescribed in their ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/trezor/trezor-firmware/blob/master/docs/misc/coins-bip44-paths.md"},"BIP-44 derivation paths")," document."),(0,i.kt)("h2",{id:"test-vectors"},"Test Vectors"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "kind": "standard account key generation",\n    "bip39_mnemonic": "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about",\n    "bip39_passphrase": "",\n    "bip39_seed": "5eb00bbddcf069084889a8ab9155568165f5c453ccb85e70811aaed6f6da5fc19a5ac40b389cd370d086206dec8aa6c43daea6690f20ad3d8d48b2d2ce9e38e4",\n    "oasis_accounts": [\n      {\n        "bip32_path": "m/44\'/474\'/0\'",\n        "private_key": "fb181e94e95cc6bedd2da03e6c4aca9951053f3e9865945dbc8975a6afd217c3ad55bbb7c192b8ecfeb6ad18bbd7681c0923f472d5b0c212fbde33008005ad61",\n        "public_key": "ad55bbb7c192b8ecfeb6ad18bbd7681c0923f472d5b0c212fbde33008005ad61",\n        "address": "oasis1qqx0wgxjwlw3jwatuwqj6582hdm9rjs4pcnvzz66"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/1\'",\n        "private_key": "1792482bcb001f45bc8ab15436e62d60fe3eb8c86e8944bfc12da4dc67a5c89b73fd7c51a0f059ea34d8dca305e0fdb21134ca32216ca1681ae1d12b3d350e16",\n        "public_key": "73fd7c51a0f059ea34d8dca305e0fdb21134ca32216ca1681ae1d12b3d350e16",\n        "address": "oasis1qr4xfjmmfx7zuyvskjw9jl3nxcp6a48e8v5e27ty"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/2\'",\n        "private_key": "765be01f40c1b78dd807e03a5099220c851cfe55870ab082be2345d63ffb9aa40f85ea84b81abded443be6ab3e16434cdddebca6e12ea27560a6ed65ff1998e0",\n        "public_key": "0f85ea84b81abded443be6ab3e16434cdddebca6e12ea27560a6ed65ff1998e0",\n        "address": "oasis1qqtdpw7jez243dnvmzfrhvgkm8zpndssvuwm346d"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/3\'",\n        "private_key": "759b3c2af3d7129072666677b37e9e7b6d22c8bbf634816627e1704f596f60c411ebdac05bfa37b746692733f15a02be9842b29088272354012417a215666b0e",\n        "public_key": "11ebdac05bfa37b746692733f15a02be9842b29088272354012417a215666b0e",\n        "address": "oasis1qqs7wl20gfppe2krdy3tm4298yt9gftxpc9j27z2"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/4\'",\n        "private_key": "db77a8a8508fd77083ba63f31b0a348441d4823e6ba73b65f354a93cf789358d8753c5da6085e6dbf5969773d27b08ee05eddcb3e11d570aaadf0f42036e69b1",\n        "public_key": "8753c5da6085e6dbf5969773d27b08ee05eddcb3e11d570aaadf0f42036e69b1",\n        "address": "oasis1qq8neyfkydj874tvs6ksljlmtxgw3plkkgf69j4w"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/5\'",\n        "private_key": "318e1fba7d83ca3ea57b0f45377e77391479ec38bfb2236a2842fe1b7a624e8800e1a8016629f2882bca2174f29033ec2a57747cd9d3c27f49cc6e11e38ee7bc",\n        "public_key": "00e1a8016629f2882bca2174f29033ec2a57747cd9d3c27f49cc6e11e38ee7bc",\n        "address": "oasis1qrdjslqdum7wwehz3uaw6t6xkpth0a9n8clsu6xq"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/6\'",\n        "private_key": "63a7f716e1994f7a8ab80f8acfae4c28c21af6b2f3084756b09651f4f4ee38606b85d0a8a9747faac85233ad5e4501b2a6862a4c02a46a0b7ea699cf2bd38f98",\n        "public_key": "6b85d0a8a9747faac85233ad5e4501b2a6862a4c02a46a0b7ea699cf2bd38f98",\n        "address": "oasis1qzlt62g85303qcrlm7s2wx2z8mxkr5v0yg5me0z3"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/7\'",\n        "private_key": "34af69924c04d75c79bd120e03d667ff6287ab602f9285bb323667ddf9f25c974f49a7672eeadbf78f910928e3d592d17f1e14964693cfa2afd94b79f0d49f48",\n        "public_key": "4f49a7672eeadbf78f910928e3d592d17f1e14964693cfa2afd94b79f0d49f48",\n        "address": "oasis1qzw2gd3qq8nse6648df32zxvsryvljeyyyl3cxma"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/8\'",\n        "private_key": "aa5242e7efe8dee05c21192766a11c46531f500ff7c0cc29ed59523c5e618792c0a24bf07953520f21c1c25882d9dbf00d24d0499be443fdcf07f2da9601d3e5",\n        "public_key": "c0a24bf07953520f21c1c25882d9dbf00d24d0499be443fdcf07f2da9601d3e5",\n        "address": "oasis1qqzjkx9u549r87ctv7x7t0un29vww6k6hckeuvtm"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/9\'",\n        "private_key": "b661567dcb9b5290889e110b0e9814e72d347c3a3bad2bafe2969637541451e5da8c9830655103c726ff80a4ac2f05a7e0b948a1986734a4f63b3e658da76c66",\n        "public_key": "da8c9830655103c726ff80a4ac2f05a7e0b948a1986734a4f63b3e658da76c66",\n        "address": "oasis1qpawhwugutd48zu4rzjdcgarcucxydedgq0uljkj"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/2147483647\'",\n        "private_key": "cc05cca118f3f26f05a0ff8e2bf5e232eede9978b7736ba10c3265870229efb19e7c2b2d03265ce4ea175e3664a678182548a7fc6db04801513cff7c98c8f151",\n        "public_key": "9e7c2b2d03265ce4ea175e3664a678182548a7fc6db04801513cff7c98c8f151",\n        "address": "oasis1qq7895v02vh40yc2dqfxhldww7wxsky0wgfdenrv"\n      }\n    ]\n  },\n  {\n    "kind": "standard account key generation",\n    "bip39_mnemonic": "equip will roof matter pink blind book anxiety banner elbow sun young",\n    "bip39_passphrase": "",\n    "bip39_seed": "ed2f664e65b5ef0dd907ae15a2788cfc98e41970bc9fcb46f5900f6919862075e721f37212304a56505dab99b001cc8907ef093b7c5016a46b50c01cc3ec1cac",\n    "oasis_accounts": [\n      {\n        "bip32_path": "m/44\'/474\'/0\'",\n        "private_key": "4e9ca1a4c2ed90c90da93ea181557ef9f465f444c0b7de35daeb218f9390d98545601f761af17dba50243529e629732f1c58d08ffddaa8491238540475729d85",\n        "public_key": "45601f761af17dba50243529e629732f1c58d08ffddaa8491238540475729d85",\n        "address": "oasis1qqjkrr643qv7yzem6g4m8rrtceh42n46usfscpcf"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/1\'",\n        "private_key": "2d0d2e75a13fd9dc423a2db8dfc1db6ebacd53f22c8a7eeb269086ec3b443eb627ed04a3c0dcec6591c001e4ea307d65cbd712cb90d85ab7703c35eee07a77dd",\n        "public_key": "27ed04a3c0dcec6591c001e4ea307d65cbd712cb90d85ab7703c35eee07a77dd",\n        "address": "oasis1qp42qp8d5k8pgekvzz0ld47k8ewvppjtmqg7t5kz"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/2\'",\n        "private_key": "351749392b02c6b7a5053bc678e71009b4fb07c37a67b44558064dc63b2efd9219456a3f0cf3f4cc5e6ce52def57d92bb3c5a651fa9626b246cfec07abc28724",\n        "public_key": "19456a3f0cf3f4cc5e6ce52def57d92bb3c5a651fa9626b246cfec07abc28724",\n        "address": "oasis1qqnwwhj4qvtap422ck7qjxf7wm89tgjhwczpu0f3"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/3\'",\n        "private_key": "ebc13ccb62142ed5b600f398270801f8f80131b225feb278d42982ce314f896292549046214fdb4729bf7a6ee4a3bbd0f463c476acc933b2c7cce084509abee4",\n        "public_key": "92549046214fdb4729bf7a6ee4a3bbd0f463c476acc933b2c7cce084509abee4",\n        "address": "oasis1qp36crawwyk0gnfyf0epcsngnpuwrz0mtu8qzu2f"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/4\'",\n        "private_key": "664b95ad8582831fb787afefd0febdddcf03343cc1ca5aa86057477e0f22c93b331288192d442d3a32e239515b4c019071c57ee89f91942923dd4c1535db096c",\n        "public_key": "331288192d442d3a32e239515b4c019071c57ee89f91942923dd4c1535db096c",\n        "address": "oasis1qz8d2zptvf44y049g9dtyqya4g0jcqxmjsf9pqa3"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/5\'",\n        "private_key": "257600bfccc21e0bc772f4d1dcfb2834805e07959ad7bd586e7deec4a320bfcecbbfef21f0833744b3504a9860b42cb0bb11e2eb042a8b83e3ceb91fe0fca096",\n        "public_key": "cbbfef21f0833744b3504a9860b42cb0bb11e2eb042a8b83e3ceb91fe0fca096",\n        "address": "oasis1qz0cxkl3mftumy9l4g663fmwg69vmtc675xh8exw"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/6\'",\n        "private_key": "10d224fbbac9d6e3084dff75ed1d3ae2ce52bce3345a48bf68d1552ed7d89594defb924439e0c93f3b14f25b3cb4044f9bc9055fa4a14d89f711528e6760133b",\n        "public_key": "defb924439e0c93f3b14f25b3cb4044f9bc9055fa4a14d89f711528e6760133b",\n        "address": "oasis1qz3pjvqnkyj42d0mllgcjd66fkavzywu4y4uhak7"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/7\'",\n        "private_key": "517bcc41be16928d32c462ee2a38981ed15b784028eb0914cfe84acf475be342102ad25ab9e1707c477e39da2184f915669791a3a7b87df8fd433f15c926ede2",\n        "public_key": "102ad25ab9e1707c477e39da2184f915669791a3a7b87df8fd433f15c926ede2",\n        "address": "oasis1qr8zs06qtew5gefgs4608a4dzychwkm0ayz36jqg"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/8\'",\n        "private_key": "ee7577c5cef5714ba6738635c6d9851c43428ff3f1e8db2fe7f45fb8d8be7c55a6ec8903ca9062910cc780c9b209c7767c2e57d646bbe06901d090ad81dabe8b",\n        "public_key": "a6ec8903ca9062910cc780c9b209c7767c2e57d646bbe06901d090ad81dabe8b",\n        "address": "oasis1qp7w82tmm6srgxqqzragdt3269334pjtlu44qpeu"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/9\'",\n        "private_key": "5257b10a5fcfd008824e2216be17be6e47b9db74018f63bb55de4d747cae6d7bba734348f3ec7af939269f62828416091c0d89e14c813ebf5e64e24d6d37e7ab",\n        "public_key": "ba734348f3ec7af939269f62828416091c0d89e14c813ebf5e64e24d6d37e7ab",\n        "address": "oasis1qp9t7zerat3lh2f7xzc58ahqzta5kj4u3gupgxfk"\n      },\n      {\n        "bip32_path": "m/44\'/474\'/2147483647\'",\n        "private_key": "e7152f1b69ad6edfc05dccf67dad5305edb224669025c809d89de7e56b2cabe58c348f412819da57361cdbd7dfbe695a05dba7f24b8e7328ff991ffadab6c4d2",\n        "public_key": "8c348f412819da57361cdbd7dfbe695a05dba7f24b8e7328ff991ffadab6c4d2",\n        "address": "oasis1qzajez400yvnzcv8x8gtcxt4z5mkfchuh5ca05hq"\n      }\n    ]\n  }\n]\n')),(0,i.kt)("p",null,"To generate these test vectors yourself, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"make -C go staking/gen_account_vectors\n")),(0,i.kt)("p",null,"We also provide more extensive test vectors. To generate them, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"make -C go staking/gen_account_vectors_extended\n")),(0,i.kt)("h2",{id:"implementation"},"Implementation"),(0,i.kt)("p",null,"Reference implementation is in Oasis Core's ",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/common/crypto/sakg"},(0,i.kt)("inlineCode",{parentName:"a"},"go/common/crypto/sakg")," package"),"."),(0,i.kt)("h2",{id:"alternatives"},"Alternatives"),(0,i.kt)("h3",{id:"bip32-ed25519-for-hierarchical-key-derivation"},"BIP32-Ed25519 for Hierarchical Key Derivation"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519")," (also sometimes referred to as ",(0,i.kt)("em",{parentName:"p"},"Ed25519 and BIP32\nbased on ",(0,i.kt)("a",{parentName:"em",href:"https://en.wikipedia.org/wiki/Dmitry_Khovratovich"},"Khovratovich")),") is a key derivation scheme that also adapts\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032"),"'s hierarchical derivation scheme for the ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve")," from\nthe Ed25519 signature scheme specified in ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032"},"RFC 8032"),"."),(0,i.kt)("h4",{id:"adoption-1"},"Adoption"),(0,i.kt)("p",null,"It is used by Cardano (",(0,i.kt)("a",{parentName:"p",href:"https://cips.cardano.org/cips/cip3/"},"CIP 3"),") and Tezos (dubbed ",(0,i.kt)("a",{parentName:"p",href:"https://medium.com/@obsidian.systems/v2-2-0-of-tezos-ledger-apps-babylon-support-and-more-e8df0e4ea161"},"bip25519 derivation scheme"),")."),(0,i.kt)("p",null,"It is supported by ",(0,i.kt)("a",{parentName:"p",href:"https://www.ledger.com/"},"Ledger")," and ",(0,i.kt)("a",{parentName:"p",href:"https://trezor.io/"},"Trezor")," hardware wallets."),(0,i.kt)("p",null,"It is commonly used by Ledger applications, including:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Zondax/ledger-polkadot/blob/7c3841a96caa5af6b78d49aac52b1373f10e3773/app/src/crypto.c#L44-L52"},"Polkadot's Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Zondax/ledger-kusama/blob/90593207558ed82ad97123b730b07bcc33aeabf2/app/src/crypto.c#L44-L52"},"Kusama's Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Zondax/ledger-zcash/blob/61fe324e567af59d39c609b84b591e28997c1a61/app/src/crypto.c#L173-L178"},"Zcash's Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Zondax/ledger-polymesh/blob/6228950a76c945fb0b5d7fc19fa475eccdf4160d/app/src/crypto.c#L44-L52"},"Polymath's Ledger app"),".")),(0,i.kt)("h4",{id:"security-concerns"},"Security Concerns"),(0,i.kt)("p",null,"Its advantage is that it supports non-hardened parent public key to child public\nkey derivation which enables certain use cases described in ","[BIP-0032][\nBIP-0032-use-cases]"," (i.e. audits, insecure money receiver, ...)."),(0,i.kt)("p",null,"At the same time, allowing non-hardened parent public key to child public key\nderivation presents a serious security concern due to ",(0,i.kt)("a",{parentName:"p",href:"#difficulties-in-adapting-bip-0032-to-edwards25519-curve"},"edwards25519's co-factor\nissues"),"."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/burdges"},"Jeff Burdges (Web3 Foundation)")," warned about a potential ",(0,i.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20210513183118/https://forum.w3f.community/t/key-recovery-attack-on-bip32-ed25519/44"},"key recovery attack\non the BIP32-Ed25519 scheme")," which could occur under the\nfollowing two assumptions:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The Ed25519 library used in BIP-Ed25519 derivation scheme does clamping\nimmediately before signing."),(0,i.kt)("li",{parentName:"ol"},"Adversary has the power to make numerous small payments in deep hierarchies\nof key derivations, observe if the victim can cash out each payment, and\nadaptively continue this process.")),(0,i.kt)("p",null,"The first assumption is very reasonable since the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519")," paper makes\nsupporting this part of their specification."),(0,i.kt)("p",null,"The second assumption is a bit more controversial.\nThe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519")," paper's specification limits the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032")," path length\n(i.e. the number of levels in the tree) to 2",(0,i.kt)("sup",null,"20"),".\nBut in practice, no implementation checks that and the issue is that path length\nis not an explicit part of the BIP32-Ed25519 algorithm. That means that one\ndoesn't know how deep in the tree the current parent/child node is. Hence, it\nwould be very hard to enforce the 2",(0,i.kt)("sup",null,"20")," path length limit."),(0,i.kt)("h4",{id:"implementation-issues"},"Implementation Issues"),(0,i.kt)("p",null,"One practical issue with ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519")," is that its authors didn't provide a\nreference implementation and accompanying test vectors."),(0,i.kt)("p",null,"This has led to a number of incompatible BIP32-Ed25519 implementations."),(0,i.kt)("p",null,"For example, ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/vbmithr/ocaml-bip32-ed25519"},"Vincent Bernardoff's OCaml implementation"),"\nand ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/islishude/bip32"},"Shude Li's Go implementation")," follow ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519"),"'s\noriginal master (i.e. root) key derivation specification and use SHA512 and\nSHA256 for deriving the private key ",(0,i.kt)("em",{parentName:"p"},"k")," and chain code ",(0,i.kt)("em",{parentName:"p"},"c")," (respectively) from\nthe seed (i.e. master secret)."),(0,i.kt)("p",null,"On the other hand, Ledger's ","[Python implementation in orakolo repository][\nBIP32-Ed25519-orakolo]"," and ","[C implementation for their Speculos emulator][\nBIP32-Ed25519-speculos]"," (variant with ",(0,i.kt)("inlineCode",{parentName:"p"},"curve")," equal to ",(0,i.kt)("inlineCode",{parentName:"p"},"CX_CURVE_Ed25519")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"mode")," equal to ",(0,i.kt)("inlineCode",{parentName:"p"},"HDW_NORMAL"),") use HMAC-SHA512 and HMAC-SHA256 for deriving the\nprivate key ",(0,i.kt)("em",{parentName:"p"},"k")," and chain code ",(0,i.kt)("em",{parentName:"p"},"c")," (respectively) from the seed."),(0,i.kt)("p",null,"Furthermore, ","[Vincent Bernardoff's OCaml implementation][\nBIP32-Ed25519-OCaml-root-discard]"," follows ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519")," paper's instructions\nto discard the seed (i.e. master secret) if the master key's third highest bit\nof the last byte of ",(0,i.kt)("em",{parentName:"p"},"k",(0,i.kt)("sub",null,"L"))," is not zero."),(0,i.kt)("p",null,"On the other hand, ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/islishude/bip32/blob/72b7efc571fdb69a3f0ce4caf7078e5466b9273d/xprv.go#L51-L53"},"Shude Li's Go implementation"),"\njust clears the master key's third highest bit\nand ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/LedgerHQ/orakolo/blob/0b2d5e669ec61df9a824df9fa1a363060116b490/src/python/orakolo/HDEd25519.py#L130-L133"},"Ledger's implementations")," repeatedly set\nthe seed to the master key and restart the derivation process until a master key\nwith the desired property is found."),(0,i.kt)("p",null,"Cardano uses its own variants of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519")," described in ",(0,i.kt)("a",{parentName:"p",href:"https://cips.cardano.org/cips/cip3/"},"CIP 3"),". In\nparticular, they define different variants of master key derivation from the\nseed described in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0023.md"},"SLIP-0023"),"."),(0,i.kt)("p",null,"Lastly, some implementations, notably ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/LedgerHQ/app-oasis"},"Oasis' Ledger app"),",\ndon't use use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/WebOfTrustInfo/rwot3-sf/blob/master/topics-and-advance-readings/HDKeys-Ed25519.pdf"},"BIP32-Ed25519"),"'s private and public key directly but use the\nobtained ",(0,i.kt)("em",{parentName:"p"},"k",(0,i.kt)("sub",null,"L"))," (first 32 bytes) of the 64 byte BIP32-Ed25519 derived\nprivate key as Ed25519's seed (i.e. non-extended private key). For more details,\nsee ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Zondax/ledger-oasis/issues/84#issuecomment-827017112"},"Zondax/ledger-oasis#84"),"."),(0,i.kt)("h3",{id:"tors-next-generation-hidden-service-keys-for-hierarchical-key-derivation"},"Tor's Next Generation Hidden Service Keys for Hierarchical Key Derivation"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://gitweb.torproject.org/torspec.git/tree/proposals/224-rend-spec-ng.txt"},"Next-Generation Hidden Services in Tor")," specification defines a\n",(0,i.kt)("a",{parentName:"p",href:"https://gitweb.torproject.org/torspec.git/tree/proposals/224-rend-spec-ng.txt#n2135"},"hierarchical key derivation scheme for Tor's keys")," which employs\nmultiplicative blinding instead of an additive one use by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032"),"."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/burdges"},"Jeff Burdges (Web3 Foundation)"),"'s post on potential ",(0,i.kt)("a",{parentName:"p",href:"https://web.archive.org/web/20210513183118/https://forum.w3f.community/t/key-recovery-attack-on-bip32-ed25519/44"},"key recovery\nattack on the BIP32-Ed25519 scheme")," mentions there is\nnothing wrong with this proposed scheme.\nLikewise, ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jstarry"},"Justin Starry (Solana)"),"'s ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/solana/issues/6301#issuecomment-551184457"},"summary of approaches to adopting BIP-0032\nfor Ed25519")," recommends this scheme as one of the possible\napproaches to adapt BIP-0032 for ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve"),"."),(0,i.kt)("p",null,"One practical issue with using this scheme would be the absence of support by\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://www.ledger.com/"},"Ledger")," and ",(0,i.kt)("a",{parentName:"p",href:"https://trezor.io/"},"Trezor")," hardware wallets."),(0,i.kt)("h2",{id:"consequences"},"Consequences"),(0,i.kt)("h3",{id:"positive"},"Positive"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Different applications interacting with the Oasis Network will use a\n",(0,i.kt)("em",{parentName:"p"},"standards-compliant")," (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki"},"BIP-0039"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki"},"BIP-0044"),") and\n",(0,i.kt)("em",{parentName:"p"},"interoperable")," account key generation process."),(0,i.kt)("p",{parentName:"li"},"Hence, there will be no vendor lock-in and users will have the option to\neasily switch between standards-compliant applications (e.g. different\nwallets).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010")," avoids a spectrum of issues when trying to support\nnon-hardened public parent key to public child key derivation with the\n",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve"),".\nNon-hardened key derivation is practically impossible to implement securely\ndue to ",(0,i.kt)("a",{parentName:"p",href:"#difficulties-in-adapting-bip-0032-to-edwards25519-curve"},"edwards25519 curve's co-factor issues"),"."),(0,i.kt)("p",{parentName:"li"},"This is achieved by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010")," explicitly disallowing non-hardened public\nparent key to public child key derivation with the edwards25519 curve.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using a ",(0,i.kt)("a",{parentName:"p",href:"#key-derivation-paths"},"3-level BIP-0032 path")," (i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"m/44'/474'/x'"),")\nallows ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/LedgerHQ/app-oasis"},"Oasis' Ledger app")," to implement automatic switching\nbetween existing (legacy) account key generation and the standard account key\ngeneration proposed in this ADR."),(0,i.kt)("p",{parentName:"li"},"Since the existing (legacy) account key generation used in\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/LedgerHQ/app-oasis"},"Oasis' Ledger app")," uses a 5-level ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-0032")," path, the\nOasis' Ledger app will be able to automatically switch between standard and\nexisting (legacy) account key generation just based on the number of levels of\nthe given BIP-0032 path."))),(0,i.kt)("h3",{id:"negative"},"Negative"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The account key generation proposed in this ADR is incompatible with two\nexisting account key generation schemes deployed in the field:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/LedgerHQ/app-oasis"},"Oasis' Ledger app"),","),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/general/manage-tokens/holding-rose-tokens/bitpie-wallet"},"Bitpie mobile wallet"),".")),(0,i.kt)("p",{parentName:"li"},"That means that these two applications will need to support two account key\ngenerations schemes simultaneously to allow existing users to access their\n(old) accounts generated via the existing (legacy) account key generation\nscheme.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010"),"'s scheme for ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc8032#section-5"},"edwards25519 curve")," only supports hardened private\nparent key to private child key derivation."),(0,i.kt)("p",{parentName:"li"},"That means it will not be possible to implement wallet features that require\nnon-hardened key derivation, e.g. watch-only feature where one is able to\nmonitor a hierarchical wallet's accounts just by knowing the root public key\nand deriving all accounts' public keys from that."))),(0,i.kt)("h3",{id:"neutral"},"Neutral"),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/satoshilabs/slips/blob/master/slip-0010.md"},"SLIP-0010")),(0,i.kt)("li",{parentName:"ul"},"Stellar's ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0005.md"},"SEP-0005")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jstarry"},"Justin Starry (Solana)"),"'s ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/solana-labs/solana/issues/6301#issuecomment-551184457"},"summary of approaches to adopting BIP-0032 for\nEd25519")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/andrewkozlik"},"Andrew Kozlik (SatoshiLabs)"),"'s\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/satoshilabs/slips/issues/703#issuecomment-515213584"},"comments on BIP32-Ed25519, SLIP-0010 and SLIP-0023"))))}l.isMDXComponent=!0}}]);