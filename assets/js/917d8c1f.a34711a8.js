"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[8060],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),d=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=d(e.components);return o.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},c=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(t),g=i,m=c["".concat(l,".").concat(g)]||c[g]||u[g]||r;return t?o.createElement(m,a(a({ref:n},p),{},{components:t})):o.createElement(m,a({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var d=2;d<r;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6521:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=t(7462),i=(t(7294),t(3905));const r={},a="Single Validator Node Network",s={unversionedId:"core/development-setup/single-validator-node-network",id:"core/development-setup/single-validator-node-network",title:"Single Validator Node Network",description:'It is possible to provision a local "network" consisting of a single validator',source:"@site/docs/core/development-setup/single-validator-node-network.md",sourceDirName:"core/development-setup",slug:"/core/development-setup/single-validator-node-network",permalink:"/core/development-setup/single-validator-node-network",draft:!1,editUrl:"https://github.com/oasisprotocol/oasis-core/edit/stable/22.2.x/docs/development-setup/single-validator-node-network.md",tags:[],version:"current",lastUpdatedAt:1669418750,formattedLastUpdatedAt:"Nov 25, 2022",frontMatter:{},sidebar:"oasisCore",previous:{title:"Local Network Runner",permalink:"/core/development-setup/oasis-net-runner"},next:{title:"Deploying a Runtime",permalink:"/core/development-setup/deploying-a-runtime"}},l={},d=[{value:"Provisioning an Entity",id:"provisioning-an-entity",level:2},{value:"Provisioning a Node",id:"provisioning-a-node",level:2},{value:"Creating a Test Genesis Document",id:"creating-a-test-genesis-document",level:2},{value:"Running the Node",id:"running-the-node",level:2},{value:"Using the Node CLI",id:"using-the-node-cli",level:2}],p={toc:d};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"single-validator-node-network"},"Single Validator Node Network"),(0,i.kt)("p",null,'It is possible to provision a local "network" consisting of a single validator\nnode. This may be useful for specific development use cases.'),(0,i.kt)("p",null,"Before proceeding, make sure to look at the ",(0,i.kt)("a",{parentName:"p",href:"/core/development-setup/prerequisites"},"prerequisites")," required for running\nan Oasis Core environment followed by ",(0,i.kt)("a",{parentName:"p",href:"/core/development-setup/building"},"build instructions")," for the respective\nenvironment (non-SGX or SGX). The following sections assume that you have\nsuccessfully completed the required build steps."),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"These instructions are for a development-only instance, do not use them\nfor setting up any kind of production instances as they are unsafe and will\nresult in insecure configurations leading to node compromise.")),(0,i.kt)("h2",{id:"provisioning-an-entity"},"Provisioning an Entity"),(0,i.kt)("p",null,"To provision an ",(0,i.kt)("a",{parentName:"p",href:"/core/consensus/services/registry#entities-and-nodes"},"entity")," we first prepare an empty directory under\n",(0,i.kt)("inlineCode",{parentName:"p"},"/path/to/entity")," and then initialize the entity:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mkdir -p /path/to/entity\ncd /path/to/entity\noasis-node registry entity init --signer.backend file --signer.dir .\n")),(0,i.kt)("h2",{id:"provisioning-a-node"},"Provisioning a Node"),(0,i.kt)("p",null,"To provision a ",(0,i.kt)("a",{parentName:"p",href:"/core/consensus/services/registry#entities-and-nodes"},"node")," we first prepare an empty directory under ",(0,i.kt)("inlineCode",{parentName:"p"},"/path/to/node"),"\nand the initialize the node. The node is provisioned as a validator."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mkdir -p /path/to/node\ncd /path/to/node\noasis-node registry node init \\\n  --signer.backend file \\\n  --signer.dir /path/to/entity \\\n  --node.consensus_address 127.0.0.1:26656 \\\n  --node.is_self_signed \\\n  --node.role validator\n")),(0,i.kt)("p",null,"After the node is provisioned we proceed with updating the ",(0,i.kt)("a",{parentName:"p",href:"/core/consensus/services/registry#register-node"},"entity whitelist"),"\nso that the node will be able to register itself:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"oasis-node registry entity update \\\n  --signer.backend file \\\n  --signer.dir /path/to/entity \\\n  --entity.node.descriptor /path/to/node/node_genesis.json\n")),(0,i.kt)("h2",{id:"creating-a-test-genesis-document"},"Creating a Test Genesis Document"),(0,i.kt)("p",null,'To create a test genesis document for your development "network" use the\nfollowing commands:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mkdir -p /path/to/genesis\ncd /path/to/genesis\noasis-node genesis init \\\n  --chain.id test \\\n  --entity /path/to/entity/entity_genesis.json \\\n  --node /path/to/node/node_genesis.json \\\n  --debug.dont_blame_oasis \\\n  --debug.test_entity \\\n  --debug.allow_test_keys \\\n  --registry.debug.allow_unroutable_addresses \\\n  --staking.token_symbol TEST\n")),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"This enables unsafe debug-only flags which must never be used in a\nproduction setting as they may result in node compromise.")),(0,i.kt)("h2",{id:"running-the-node"},"Running the Node"),(0,i.kt)("p",null,"To run the single validator node, use the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"oasis-node \\\n  --datadir /path/to/node \\\n  --genesis.file /path/to/genesis/genesis.json \\\n  --worker.registration.entity /path/to/entity/entity.json \\\n  --consensus.validator \\\n  --debug.dont_blame_oasis \\\n  --debug.allow_test_keys \\\n  --log.level debug\n")),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"This enables unsafe debug-only flags which must never be used in a\nproduction setting as they may result in node compromise.")),(0,i.kt)("h2",{id:"using-the-node-cli"},"Using the Node CLI"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"oasis-node")," exposes ",(0,i.kt)("a",{parentName:"p",href:"/core/oasis-node/rpc"},"an RPC interface")," via a UNIX socket located in its\ndata directory (e.g., under ",(0,i.kt)("inlineCode",{parentName:"p"},"/path/to/node/internal.sock"),"). To simplify the\nfollowing instructions set up an ",(0,i.kt)("inlineCode",{parentName:"p"},"ADDR")," environment variable pointing to it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"export ADDR=unix:/path/to/node/internal.sock\n")),(0,i.kt)("p",null,"This can then be used to execute CLI commands against the running node (in a\nseparate terminal). For example to show all registered entities:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"oasis-node registry entity list -a $ADDR -v\n")),(0,i.kt)("p",null,"Giving output similar to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{"v":1,"id":"UcxpyD0kSo/5keRqv8pLypM/Mg5S5iULRbt7Uf73vKQ=","nodes":["jo+quvaFYAP4Chyf1PRqCZZObqpDeJCxfBzTyghiXxs="]}\n{"v":1,"id":"TqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU=","allow_entity_signed_nodes":true}\n')),(0,i.kt)("p",null,"Or getting a list of all staking accounts:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"oasis-node stake list -a $ADDR\n")),(0,i.kt)("p",null,"Giving output similar to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"oasis1qzzd6khm3acqskpxlk9vd5044cmmcce78y5l6000\noasis1qz3xllj0kktskjzlk0qacadgwpfe8v7sy5kztvly\noasis1qrh4wqfknrlvv7whjm7mjsjlvka2h35ply289pp2\n")))}u.isMDXComponent=!0}}]);