"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[7782],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),u=o,k=p["".concat(l,".").concat(u)]||p[u]||m[u]||r;return n?a.createElement(k,s(s({ref:t},d),{},{components:n})):a.createElement(k,s({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9445:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={},s="Common Staking Info",i={unversionedId:"general/manage-tokens/advanced/oasis-cli-tools/common-staking-info",id:"general/manage-tokens/advanced/oasis-cli-tools/common-staking-info",title:"Common Staking Info",description:"This example assumes you have read and followed the",source:"@site/docs/general/manage-tokens/advanced/oasis-cli-tools/common-staking-info.md",sourceDirName:"general/manage-tokens/advanced/oasis-cli-tools",slug:"/general/manage-tokens/advanced/oasis-cli-tools/common-staking-info",permalink:"/general/manage-tokens/advanced/oasis-cli-tools/common-staking-info",draft:!1,editUrl:"https://github.com/oasisprotocol/docs/edit/main/docs/general/manage-tokens/advanced/oasis-cli-tools/common-staking-info.md",tags:[],version:"current",lastUpdatedAt:1675933402,formattedLastUpdatedAt:"Feb 9, 2023",frontMatter:{},sidebar:"general",previous:{title:"Setup",permalink:"/general/manage-tokens/advanced/oasis-cli-tools/setup"},next:{title:"List Accounts",permalink:"/general/manage-tokens/advanced/oasis-cli-tools/list-accounts"}},l={},c=[],d={toc:c};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"common-staking-info"},"Common Staking Info"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This example assumes you have read and followed the\n",(0,o.kt)("a",{parentName:"p",href:"/general/manage-tokens/advanced/oasis-cli-tools/prerequisites"},"Prerequisites")," and ",(0,o.kt)("a",{parentName:"p",href:"/general/manage-tokens/advanced/oasis-cli-tools/setup"},"Setup")," sections.")),(0,o.kt)("p",null,"To query an Oasis node for the common staking information, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-node stake info -a $ADDR\n")),(0,o.kt)("p",null,"At time of writing this document, the command will output the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Token's ticker symbol: ROSE\nToken's value base-10 exponent: 9\nTotal supply: 10000000000.0 ROSE\nCommon pool: 1319242295.211384785 ROSE\nLast block fees: 0.0 ROSE\nGovernance deposits: 0.0 ROSE\nStaking threshold (entity): 100.0 ROSE\nStaking threshold (node-validator): 100.0 ROSE\nStaking threshold (node-compute): 100.0 ROSE\nStaking threshold (node-keymanager): 100.0 ROSE\nStaking threshold (runtime-compute): 50000.0 ROSE\nStaking threshold (runtime-keymanager): 50000.0 ROSE\n")),(0,o.kt)("p",null,"We can see that the token's name is ROSE and that 1 token corresponds to 10^9\n(i.e. one billion) base units."),(0,o.kt)("p",null,"Next, we can observe that the ",(0,o.kt)("strong",{parentName:"p"},"total supply")," is 10 billion tokens and that\nabout 1.3 billion tokens are in the ",(0,o.kt)("strong",{parentName:"p"},"common pool"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"staking thresholds")," for the entity and all node kinds (validator,\ncompute, key manager) are 100 tokens."),(0,o.kt)("p",null,"This means that if you want to register, e.g. an entity with a validator node,\nyou need to escrow (i.e. stake) at least 200 tokens."),(0,o.kt)("p",null,"Staking threshold for registering a ",(0,o.kt)("strong",{parentName:"p"},"new runtime")," (ParaTime) of any kind\n(compute, key manager) is 50,000 tokens."),(0,o.kt)("p",null,"In addition, each runtime may require an ",(0,o.kt)("strong",{parentName:"p"},"additional staking threshold")," for\nrunning a compute node. You need to query the registry in verbose mode to\nobtain it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ ./oasis-node registry runtime list -v -a $ADDR\n")),(0,o.kt)("p",null,"For example, Emerald ParaTime running on the Mainnet has the following\nadditional staking requirements: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "v": 3,\n  "id": "000000000000000000000000000000000000000000000000e2eaa99fc008f87f",\n  ...\n  "staking": {\n    "thresholds": {\n      "node-compute": "5000000000000000"\n    },\n    "min_in_message_fee": "0"\n  },\n  ...\n}\n')),(0,o.kt)("p",null,"To register a node that is both a validator and a compute node for Emerald\nParaTime, the entity for which the node is registered would need to satisfy the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Entity registration staking threshold (currently 100 tokens),"),(0,o.kt)("li",{parentName:"ul"},"Validator node staking threshold (currently 100 tokens),"),(0,o.kt)("li",{parentName:"ul"},"Compute node staking threshold (currently 100 tokens),"),(0,o.kt)("li",{parentName:"ul"},"Emerald-specific staking threshold (currently 5,000,000 tokens),")),(0,o.kt)("p",null,"All together, there would need to be at least 5,000,300 tokens staked in your\nentity's escrow account."))}m.isMDXComponent=!0}}]);