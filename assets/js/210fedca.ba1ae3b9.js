"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[9839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,y=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return n?o.createElement(y,i(i({ref:t},p),{},{components:n})):o.createElement(y,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=c;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4396:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={},i="Wiping Node State",d={unversionedId:"node/run-your-node/maintenance/wiping-node-state",id:"node/run-your-node/maintenance/wiping-node-state",title:"Wiping Node State",description:"In some cases you might want (or need) to do a full redeploy with clean state before deploying a new version of the network. This should never actually be used during a Mainnet unless there is some serious corruption, but your node will have to spend time catching up to the rest of the network.",source:"@site/docs/node/run-your-node/maintenance/wiping-node-state.md",sourceDirName:"node/run-your-node/maintenance",slug:"/node/run-your-node/maintenance/wiping-node-state",permalink:"/node/run-your-node/maintenance/wiping-node-state",draft:!1,editUrl:"https://github.com/oasisprotocol/docs/edit/main/docs/node/run-your-node/maintenance/wiping-node-state.md",tags:[],version:"current",lastUpdatedAt:1675933402,formattedLastUpdatedAt:"Feb 9, 2023",frontMatter:{},sidebar:"operators",previous:{title:"Maintenance",permalink:"/node/run-your-node/maintenance"},next:{title:"Handling Network Upgrades",permalink:"/node/run-your-node/maintenance/handling-network-upgrades"}},s={},l=[{value:"State Wipe and Keep Node Identity",id:"state-wipe-and-keep-node-identity",level:2},{value:"Full State Wipe",id:"full-state-wipe",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wiping-node-state"},"Wiping Node State"),(0,r.kt)("p",null,"In some cases you might want (or need) to do a full redeploy with clean state before deploying a new version of the network. This should never actually be used during a Mainnet unless there is some serious corruption, but your node will have to spend time catching up to the rest of the network."),(0,r.kt)("p",null,"The following instructions assume that your ",(0,r.kt)("inlineCode",{parentName:"p"},"datadir")," is defined as ",(0,r.kt)("inlineCode",{parentName:"p"},"/serverdir/node")," in your node's config."),(0,r.kt)("h2",{id:"state-wipe-and-keep-node-identity"},"State Wipe and Keep Node Identity"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Make sure to include the ",(0,r.kt)("inlineCode",{parentName:"p"},"--preserve.mkvs_database")," flag if you are wiping blockchain state on a runtime node and need to preserve runtime state.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Stop the ",(0,r.kt)("inlineCode",{parentName:"p"},"oasis-node")," server process (this will depend on your own deployment setup).")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Remove blockchain state using the ",(0,r.kt)("inlineCode",{parentName:"p"},"oasis-node unsafe-reset")," command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Do a dry run first to see which files will get deleted.\noasis-node unsafe-reset \\\n  --preserve.mkvs_database \\\n  --datadir=/serverdir/node \\\n  --dry_run \\\n  --log.level info\n  \n# Delete.\noasis-node unsafe-reset \\\n  --preserve.mkvs_database \\\n  --datadir /serverdir/node \\\n  --log.level info\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the ",(0,r.kt)("inlineCode",{parentName:"p"},"oasis-node")," server process."))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"oasis-node")," is very strict regarding the ownership of the files. If you encounter the following error:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"common/Mkdir: path '/serverdir/node' has invalid owner: 1000. Expected owner: 0\n")),(0,r.kt)("p",{parentName:"admonition"},"you need to run the ",(0,r.kt)("inlineCode",{parentName:"p"},"oasis-node")," command as the exact user that owns the files, e.g.:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"sudo --user=#1000 -- oasis-node unsafe-reset --datadir=/serverdir/node --dry_run --log.level info\n"))),(0,r.kt)("h2",{id:"full-state-wipe"},"Full State Wipe"),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This is likely not what you want to do. This is destructive and might result in losing private state required to operate the given node. ",(0,r.kt)("strong",{parentName:"p"},"USE AT YOUR OWN RISK."))),(0,r.kt)("p",null,"A full state wipe will also mean that you'll need to generate a new node identity (or copy the old one)."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Stop the ",(0,r.kt)("inlineCode",{parentName:"li"},"oasis-node")," server process (this will depend on your own deployment setup)"),(0,r.kt)("li",{parentName:"ol"},"Remove the the ",(0,r.kt)("inlineCode",{parentName:"li"},"/serverdir/node")," directory."),(0,r.kt)("li",{parentName:"ol"},"Redeploy your node. You'll need to copy your Node artifacts or create brand new ones.")))}u.isMDXComponent=!0}}]);