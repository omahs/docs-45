"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[2699],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,k=u["".concat(s,".").concat(d)]||u[d]||c[d]||o;return n?r.createElement(k,i(i({ref:t},m),{},{components:n})):r.createElement(k,i({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8358:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i="Versioning",l={unversionedId:"core/versioning",id:"core/versioning",title:"Versioning",description:"Oasis Core",source:"@site/docs/core/versioning.md",sourceDirName:"core",slug:"/core/versioning",permalink:"/core/versioning",draft:!1,editUrl:"https://github.com/oasisprotocol/oasis-core/edit/stable/22.2.x/docs/versioning.md",tags:[],version:"current",lastUpdatedAt:1669418750,formattedLastUpdatedAt:"Nov 25, 2022",frontMatter:{},sidebar:"oasisCore",previous:{title:"Release Process",permalink:"/core/release-process"},next:{title:"Security",permalink:"/core/SECURITY"}},s={},p=[{value:"Oasis Core",id:"oasis-core",level:2},{value:"Protocols (Consensus, Runtime Host, Runtime Committee)",id:"protocols-consensus-runtime-host-runtime-committee",level:2},{value:"Version 1.0.0",id:"version-100",level:3}],m={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"versioning"},"Versioning"),(0,a.kt)("h2",{id:"oasis-core"},"Oasis Core"),(0,a.kt)("p",null,"Oasis Core (as a whole) uses a ",(0,a.kt)("a",{parentName:"p",href:"http://calver.org"},"CalVer")," (calendar versioning) scheme with the\nfollowing format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"YY.MINOR[.MICRO][-MODIFIER]\n")),(0,a.kt)("p",null,"where:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"YY")," represents short year (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"19"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"20"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"21"),", ...),")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"MINOR")," represents the minor version starting with zero (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"1"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"2"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"3"),", ...),")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"MICRO"),' represents (optional) final number in the version (sometimes referred\nto as the "patch" segment) (e.g. ',(0,a.kt)("inlineCode",{parentName:"p"},"0"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"1"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"2"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"3"),", ...)."),(0,a.kt)("p",{parentName:"li"},"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"MICRO")," version is ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),", it will be omitted.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"MODIFIER")," represents (optional) build metadata, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"git8c01382"),"."))),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"YY")," version must be bumped after each new calendar year."),(0,a.kt)("p",null,"When a regularly scheduled release is made, the ",(0,a.kt)("inlineCode",{parentName:"p"},"MINOR")," version should be\nbumped."),(0,a.kt)("p",null,"If there is a major fix that we want to back-port from an upcoming next release\nand release it, then the ",(0,a.kt)("inlineCode",{parentName:"p"},"MICRO")," version should be bumped."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"MODIFIER")," should be used to denote a build from an untagged (and\npotentially unclean) git source. It should be of the form:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"gitCOMMIT_SHA[+dirty]\n")),(0,a.kt)("p",null,"where:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"COMMIT_SHA")," represents the current commit\u2019s abbreviated SHA.")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"+dirty")," part is optional and is only present if there are uncommitted\nchanges in the working directory."),(0,a.kt)("h2",{id:"protocols-consensus-runtime-host-runtime-committee"},"Protocols (Consensus, Runtime Host, Runtime Committee)"),(0,a.kt)("p",null,"Oasis Core\u2019s protocol versions use ",(0,a.kt)("a",{parentName:"p",href:"https://semver.org/"},"SemVer")," (semantic versioning) 2.0.0 with the\nfollowing format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"MAJOR.MINOR.PATCH\n")),(0,a.kt)("p",null,"where:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MAJOR")," represents the major version,"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MINOR")," represents the minor version,"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PATCH")," represents the patch version.")),(0,a.kt)("p",null,"Whenever a backward-incompatible change is made to a protocol, the ",(0,a.kt)("inlineCode",{parentName:"p"},"MAJOR"),"\nversion must be bumped."),(0,a.kt)("p",null,"If a new release adds a protocol functionality in a backwards compatible manner,\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"MINOR")," version must be bumped."),(0,a.kt)("p",null,"When only backwards compatible bug fixes are made to a protocol, the ",(0,a.kt)("inlineCode",{parentName:"p"},"PATCH"),"\nversion should be bumped."),(0,a.kt)("h3",{id:"version-100"},"Version 1.0.0"),(0,a.kt)("p",null,"With the release of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/oasisprotocol/oasis-core/blob/v20.10/CHANGELOG.md"},"Oasis Core 20.10"),", we bumped the protocol versions to\nversion 1.0.0 which ",(0,a.kt)("a",{parentName:"p",href:"https://semver.org/#how-do-i-know-when-to-release-100"},"signified that they are ready for production use"),"."))}c.isMDXComponent=!0}}]);