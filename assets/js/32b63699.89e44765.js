"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[7351],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>c});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(t),c=r,h=m["".concat(s,".").concat(c)]||m[c]||u[c]||o;return t?n.createElement(h,i(i({ref:a},d),{},{components:t})):n.createElement(h,i({ref:a},d))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9110:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const o={description:"Web3 gateway for Emerald and Sapphire ParaTimes"},i="Oasis Web3 Gateway for your EVM ParaTime",l={unversionedId:"node/web3",id:"node/web3",title:"Oasis Web3 Gateway for your EVM ParaTime",description:"Web3 gateway for Emerald and Sapphire ParaTimes",source:"@site/docs/node/web3.md",sourceDirName:"node",slug:"/node/web3",permalink:"/node/web3",draft:!1,editUrl:"https://github.com/oasisprotocol/docs/edit/main/docs/node/web3.md",tags:[],version:"current",lastUpdatedAt:1675933402,formattedLastUpdatedAt:"Feb 9, 2023",frontMatter:{description:"Web3 gateway for Emerald and Sapphire ParaTimes"},sidebar:"operators",previous:{title:"Troubleshooting",permalink:"/node/run-your-node/troubleshooting"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Hardware",id:"hardware",level:3},{value:"Oasis ParaTime Client Node",id:"oasis-paratime-client-node",level:3},{value:"PostgreSQL",id:"postgresql",level:3},{value:"Download Oasis Web3 Gateway",id:"download-oasis-web3-gateway",level:2},{value:"Running the Web3 Gateway",id:"running-the-web3-gateway",level:2},{value:"Archive Web3 Gateway",id:"archive-web3-gateway",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Wipe state to force a complete reindex",id:"wipe-state-to-force-a-complete-reindex",level:3}],d={toc:p};function u(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"oasis-web3-gateway-for-your-evm-paratime"},"Oasis Web3 Gateway for your EVM ParaTime"),(0,r.kt)("p",null,"This guide will walk you through the steps needed to set up the Oasis Web3\ngateway for EVM-compatible ParaTimes, such as ",(0,r.kt)("a",{parentName:"p",href:"/dapp/emerald/"},"Emerald")," and ",(0,r.kt)("a",{parentName:"p",href:"/dapp/sapphire/"},"Sapphire"),"."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Each ParaTime requires its own instance of the Web3 gateway!")),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("h3",{id:"hardware"},"Hardware"),(0,r.kt)("p",null,"In addition to the minimum hardware requirements for running the Oasis node,\nthe following should be added for running the Web3 gateway:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CPU:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Minimum: 2.0 GHz x86-64 CPU"),(0,r.kt)("li",{parentName:"ul"},"Recommended: 2.0 GHz x86-64 CPU with 2 cores/vCPUs"))),(0,r.kt)("li",{parentName:"ul"},"Memory:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Minimum: 4 GB of ECC RAM"),(0,r.kt)("li",{parentName:"ul"},"Recommended: 8 GB of ECC RAM"))),(0,r.kt)("li",{parentName:"ul"},"Storage:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Minimum: 300 GB of SSD or NVMe fast storage"),(0,r.kt)("li",{parentName:"ul"},"Recommended: 500 GB of SSD or NVMe fast storage")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To put the figures above into perspective, the Web3 gateway for Emerald with\nPostgreSQL encountered ",(0,r.kt)("strong",{parentName:"p"},"210 GB")," of database growth in ~5 months between\nNov 18, 2021 and Apr 11, 2022 (since the ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/oasis-protocol-project/oasis-emerald-evm-paratime-is-live-on-mainnet-13afe953a4c9"},"Emerald Mainnet launch"),").")),(0,r.kt)("h3",{id:"oasis-paratime-client-node"},"Oasis ParaTime Client Node"),(0,r.kt)("p",null,"The Web3 gateway requires a locally deployed ParaTime-enabled Oasis Node.\nFirst, follow the\n",(0,r.kt)("a",{parentName:"p",href:"/node/run-your-node/paratime-client-node"},"Oasis ParaTime client node"),"\nguide on how to configure the Oasis client node with one or more ParaTimes.\nAlways use the exact combination of the Oasis node/ParaTime versions as\npublished on the network parameters page for either ",(0,r.kt)("a",{parentName:"p",href:"/node/mainnet/"},"Mainnet")," or ",(0,r.kt)("a",{parentName:"p",href:"/node/testnet/"},"Testnet"),"."),(0,r.kt)("p",null,"Apart from the transactions that happen on-chain and produce some effects,\nthere are also a number of read-only queries implemented in the Oasis protocol\nand EVM. Some of them may be quite resource-hungry such as simulating EVM calls\nand are disabled by default to avoid DDOS attacks. If your Oasis node instance\nwill only be used by you and your Web3 gateway(s), you can safely enable\n",(0,r.kt)("em",{parentName:"p"},"expensive")," transactions by adding the following to your Oasis node config:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='config.yml'",title:"'config.yml'"},'# ... sections not relevant are omitted ...\nruntime:\n  mode: client\n  paths:\n    - {{ emerald_bundle_path }}\n    - {{ sapphire_bundle_path }}\n\n  config:\n    "{{ emerald_paratime_id }}":\n      estimate_gas_by_simulating_contracts: true\n      allowed_queries:\n        - all_expensive: true\n    "{{ sapphire_paratime_id }}":\n      estimate_gas_by_simulating_contracts: true\n      allowed_queries:\n        - all_expensive: true\n')),(0,r.kt)("p",null,"In the config above replace ",(0,r.kt)("inlineCode",{parentName:"p"},"{{ ... }}")," placeholders with actual ParaTime IDs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ emerald_paratime_id }}"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Emerald on ",(0,r.kt)("a",{parentName:"li",href:"/node/mainnet/#emerald-paratime"},"Mainnet"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"000000000000000000000000000000000000000000000000e2eaa99fc008f87f")),(0,r.kt)("li",{parentName:"ul"},"Emerald on ",(0,r.kt)("a",{parentName:"li",href:"/node/testnet/#emerald-paratime"},"Testnet"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"00000000000000000000000000000000000000000000000072c8215e60d5bca7")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ sapphire_paratime_id }}"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Sapphire on ",(0,r.kt)("a",{parentName:"li",href:"/node/testnet/#sapphire-paratime"},"Testnet"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"000000000000000000000000000000000000000000000000a6d1e3ebf60dff6c"))))),(0,r.kt)("h3",{id:"postgresql"},"PostgreSQL"),(0,r.kt)("p",null,"The Web3 gateway stores blockchain data in a\n",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/"},"PostgreSQL")," database version ",(0,r.kt)("strong",{parentName:"p"},"13.3")," or higher.\nInstall it by following instructions specific to your operating system and\nenvironment."),(0,r.kt)("p",null,"Because each ParaTime requires its own instance of the Web3 gateway, you will\nhave to create a separate database and a separate user for each Web3 instance."),(0,r.kt)("h2",{id:"download-oasis-web3-gateway"},"Download Oasis Web3 Gateway"),(0,r.kt)("p",null,"Check the required version of the Web3 gateway for the network you will be\ndeploying it to: ",(0,r.kt)("a",{parentName:"p",href:"/node/mainnet/"},"Mainnet"),", ",(0,r.kt)("a",{parentName:"p",href:"/node/testnet/"},"Testnet"),". Next, download the Oasis-provided\nbinaries from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/oasisprotocol/oasis-web3-gateway/releases"},"official GitHub repository"),"."),(0,r.kt)("p",null,"Alternatively, you can download the source release and compile it yourself.\nConsult the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/oasisprotocol/oasis-web3-gateway/blob/main/README.md#building-and-testing"},"README.md")," file for more information."),(0,r.kt)("h2",{id:"running-the-web3-gateway"},"Running the Web3 Gateway"),(0,r.kt)("p",null,"Copy the content below to the config file of your Web3 gateway."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='gateway.yml'",title:"'gateway.yml'"},'# Uncomment the runtime_id below.\nruntime_id: {{ paratime_id }}\n# Path to your internal.sock file in the root Oasis node datadir.\nnode_address: "unix:{{ oasis_node_unix_socket }}"\n\n# By default, we index the entire blockchain history.\n# If you are low on disk space or you use the gateway just for submitting transactions, enable\n# pruning below.\nenable_pruning: false\npruning_step: 100000\nindexing_start: 0\n\nlog:\n  level: debug\n  format: json\n\ndatabase:\n  # Change host and port, if PostgreSQL is running somewhere else.\n  host: "127.0.0.1"\n  port: 5432\n  # Enter your database name, username and password.\n  db: {{ postgresql_db }}\n  user: {{ postgresql_user }}\n  password: {{ postgresql_password }}\n  dial_timeout: 5\n  read_timeout: 10\n  write_timeout: 5\n  max_open_conns: 0\n\ngateway:\n  chain_id: {{ chain_id }}\n  http:\n    # Change host to your external IP address if you have users accessing Web3 from the outside.\n    host: "localhost"\n    # Use different port for each Web3 gateway instance, if all run locally.\n    port: 8545\n    cors: ["*"]\n  ws:\n    # Change host to your external IP address if you have users accessing Web3 from the outside.\n    host: "localhost"\n    # Use different port for each Web3 gateway instance, if all run locally.\n    port: 8546\n    origins: ["*"]\n  method_limits:\n    get_logs_max_rounds: 100\n')),(0,r.kt)("p",null,"Use the following placeholder values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ paratime_id }}"),": The ID of the Emerald or Sapphire ParaTime which you are\nconfiguring the Web3 gateway for (see ",(0,r.kt)("a",{parentName:"li",href:"#oasis-paratime-client-node"},"above"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ oasis_node_unix_socket }}"),": Path to the ",(0,r.kt)("inlineCode",{parentName:"li"},"internal.sock")," file created by\nthe Oasis node."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ postgresql_db }}"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ postgresql_user }}"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ postgresql_password }}"),":\nDatabase name and credentials for your PostgreSQL database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ chain_id }}"),": The chain ID of your EVM network:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Emerald on ",(0,r.kt)("a",{parentName:"li",href:"/dapp/emerald/#mainnet"},"Mainnet"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"42262")),(0,r.kt)("li",{parentName:"ul"},"Emerald on ",(0,r.kt)("a",{parentName:"li",href:"/dapp/emerald/#testnet"},"Testnet"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"42261")),(0,r.kt)("li",{parentName:"ul"},"Sapphire on ",(0,r.kt)("a",{parentName:"li",href:"/dapp/sapphire/#testnet"},"Testnet"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"23295"))))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"All configuration settings can also be set via environment variables. For\nexample, instead of setting up the database password in the config file above\nyou can export:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"DATABASE__PASSWORD=your_password_here\n"))),(0,r.kt)("p",null,"To start the Web3 gateway invoke:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./oasis-web3-gateway --config gateway.yml\n")),(0,r.kt)("p",null,"The Web3 gateway will connect to your Oasis node and start indexing available\nblocks (i.e. from the last network upgrade). This may \u2014 depending on your\nhardware and the size of the blockchain \u2014 take hours."),(0,r.kt)("p",null,"If your database contains any tables populated by the previous version of the\nWeb3 gateway, migration scripts will automatically be applied upon startup."),(0,r.kt)("p",null,"If you want to migrate the database separately, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./oasis-web3-gateway migrate-db --config gateway.yml\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Above, we are invoking the ",(0,r.kt)("inlineCode",{parentName:"p"},"oasis-web3-gateway")," process directly from the\nshell, so you can quickly start using it. If you are setting up a production\nenvironment, you should ",(0,r.kt)("a",{parentName:"p",href:"/node/run-your-node/prerequisites/system-configuration#non-root"},"configure the Web3 gateway as a system service")," and register it in the service manager for your platform.")),(0,r.kt)("h2",{id:"archive-web3-gateway"},"Archive Web3 Gateway"),(0,r.kt)("p",null,"Each Oasis Web3 gateway can only connect to and synchronize blocks from a\nsingle Oasis node instance. To enable access to older EVM blocks, you can\nconfigure the Web3 gateway to behave as a proxy to another \u2014 archive \u2014 instance\nof the Web3 gateway."),(0,r.kt)("p",null,"First, set up an instance of the ",(0,r.kt)("a",{parentName:"p",href:"/node/run-your-node/archive-node"},"Oasis archive node"),". Then, repeat the similar\nprocess of setting up a Web3 gateway as you would normally do, but configure it\nto use the newly set up Oasis archive node."),(0,r.kt)("p",null,"Suppose the archive instances of the Web3 gateway and Oasis nodes are up\nand running and the archive Web3 gateway is listening on the local port ",(0,r.kt)("inlineCode",{parentName:"p"},"8543"),".\nEnable the proxy for historical blocks by adding the following to your (live)\nWeb3 gateway config and restart it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='gateway.yml'",title:"'gateway.yml'"},"# URI of an archive web3 gateway instance for servicing historical queries.\narchive_uri: 'http://localhost:8543'\n")),(0,r.kt)("p",null,"If a query requires information on the block which isn't stored in the\nlive version of the Web3 gateway, the gateway will pass the query to the\nconfigured archive instance and return the obtained result."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Historical estimate gas calls are not supported.")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h3",{id:"wipe-state-to-force-a-complete-reindex"},"Wipe state to force a complete reindex"),(0,r.kt)("p",null,"If you encounter database or hardware issues, you may need to wipe the\ndatabase and reindex all blocks. First, run the ",(0,r.kt)("inlineCode",{parentName:"p"},"truncate-db")," subcommand:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"oasis-web3-gateway truncate-db --config gateway.yml --unsafe\n")),(0,r.kt)("p",null,"Then, execute the ",(0,r.kt)("inlineCode",{parentName:"p"},"oasis-web3-gateway")," normally to start reindexing the\nblocks."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This will wipe all existing state in the PostgreSQL database and can lead to\nextended downtime while the Web3 Gateway is reindexing the blocks.")))}u.isMDXComponent=!0}}]);