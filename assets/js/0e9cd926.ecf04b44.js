"use strict";(self.webpackChunkdocs_oasis_dev=self.webpackChunkdocs_oasis_dev||[]).push([[2072],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>v});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=o.createContext({}),d=function(e){var t=o.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(a),v=n,g=u["".concat(l,".").concat(v)]||u[v]||c[v]||i;return a?o.createElement(g,r(r({ref:t},p),{},{components:a})):o.createElement(g,r({ref:t},p))}));function v(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var d=2;d<i;d++)r[d]=a[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}u.displayName="MDXCreateElement"},463:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=a(7462),n=(a(7294),a(3905));const i={},r="ADR 0020: Governance Support for Delegator Votes",s={unversionedId:"adrs/0020-governance-delegator-votes",id:"adrs/0020-governance-delegator-votes",title:"ADR 0020: Governance Support for Delegator Votes",description:"Component",source:"@site/docs/adrs/0020-governance-delegator-votes.md",sourceDirName:"adrs",slug:"/adrs/0020-governance-delegator-votes",permalink:"/adrs/0020-governance-delegator-votes",draft:!1,editUrl:"https://github.com/oasisprotocol/adrs/edit/main/0020-governance-delegator-votes.md",tags:[],version:"current",lastUpdatedAt:1674490900,formattedLastUpdatedAt:"Jan 23, 2023",frontMatter:{},sidebar:"adrs",previous:{title:"ADR 0017: ParaTime Application Standard Proposal Process",permalink:"/adrs/0017-app-standards"}},l={},d=[{value:"Component",id:"component",level:2},{value:"Changelog",id:"changelog",level:2},{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Casting Votes",id:"casting-votes",level:3},{value:"Alternative solutions",id:"alternative-solutions",level:4},{value:"Vote tallying",id:"vote-tallying",level:3},{value:"Alternative Vote Tallying procedures",id:"alternative-vote-tallying-procedures",level:4},{value:"Implementations in other chains",id:"implementations-in-other-chains",level:4},{value:"Benchmarks",id:"benchmarks",level:4},{value:"Pruning",id:"pruning",level:3},{value:"Voting via messages",id:"voting-via-messages",level:3},{value:"Consequences",id:"consequences",level:2},{value:"Positive",id:"positive",level:3},{value:"Negative",id:"negative",level:3},{value:"Neutral",id:"neutral",level:3}],p={toc:d};function c(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"adr-0020-governance-support-for-delegator-votes"},"ADR 0020: Governance Support for Delegator Votes"),(0,n.kt)("h2",{id:"component"},"Component"),(0,n.kt)("p",null,"Oasis Core"),(0,n.kt)("h2",{id:"changelog"},"Changelog"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"2022-11-07: Minor updates. Added Cosmos-SDK implementation note."),(0,n.kt)("li",{parentName:"ul"},"2022-11-03: Added benchmarks, minor updates."),(0,n.kt)("li",{parentName:"ul"},"2022-11-02: Initial draft.")),(0,n.kt)("h2",{id:"status"},"Status"),(0,n.kt)("p",null,"Accepted"),(0,n.kt)("h2",{id:"context"},"Context"),(0,n.kt)("p",null,"With the current governance voting mechanism (",(0,n.kt)("a",{parentName:"p",href:"/adrs/0004-runtime-governance"},"ADR 04"),"), only the active\nvalidator set is participating in voting. This means that the validators are\nvoting on behalf of all their delegators. This ADR proposes a change so that\neach delegator is able to vote with its own stake. The delegators vote acts as\nan override of the validator vote."),(0,n.kt)("h2",{id:"decision"},"Decision"),(0,n.kt)("h3",{id:"casting-votes"},"Casting Votes"),(0,n.kt)("p",null,"In the current implementation the submitter of a vote needs to be a part of the\nactive validator committee at the time the vote is cast. This requirement is\nrelaxed so that additionally anyone with a delegation to an active validator\ncommittee entity can vote."),(0,n.kt)("p",null,"This change requires an efficient ",(0,n.kt)("inlineCode",{parentName:"p"},"staking.DelegationsFor")," query to obtain a\nlist of accounts the submitter is delegating to. Staking state is updated with:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// delegationKeyReverseFmt is the key format used for reverse mapping of\n// delegations (delegator address, escrow address).\n//\n// Value is CBOR-serialized delegation.\ndelegationKeyReverseFmt = keyformat.New(0x5A, &staking.Address{}, &staking.Address{})\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"state.SetDelegation")," function is updated to store both ",(0,n.kt)("inlineCode",{parentName:"p"},"delegationKeyFmt")," and\nthe reverse ",(0,n.kt)("inlineCode",{parentName:"p"},"delegationKeyReverseFmt"),". ",(0,n.kt)("inlineCode",{parentName:"p"},"DelegationsFor")," query function is\nupdated to use the added reverse mapping."),(0,n.kt)("p",null,"For completeness the same can be done for debonding delegations, although not\nnecessary for the governance changes proposed in this ADR."),(0,n.kt)("h4",{id:"alternative-solutions"},"Alternative solutions"),(0,n.kt)("p",null,"Possible alternatives that would avoid adding the reverse mapping are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Querying ",(0,n.kt)("inlineCode",{parentName:"li"},"DelegationsTo")," for each validator. This results in ",(0,n.kt)("inlineCode",{parentName:"li"},"num_validators"),"\nqueries per cast vote transaction which is still too much."),(0,n.kt)("li",{parentName:"ul"},"Allowing anyone to cast votes. Potentially a viable solution, but this could\nresult in the number of voters growing uncontrollably large. This might be ok,\nif the vote tallying procedure would ignore those votes. However the votes\nstate could still grow problematically big.")),(0,n.kt)("h3",{id:"vote-tallying"},"Vote tallying"),(0,n.kt)("p",null,"When a proposal closes, the vote tallying procedure changes to:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"# Two-pass over votes approach.\n1  Tally up the validator votes (as it is already implemented) # First pass.\n2  For each of the voters do:                                  # Second pass.\n3    For each of the entities voter delegates to:\n4      Skip non validator entities\n5      Skip if voter's vote matches the delegation entity vote\n6      Compute stake from the delegation shares\n4      If delegation entity voted, subtract the stake from the delegation entity vote tally\n5      Add computed stake to the voter's vote tally\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Possbile variant: instead of using ",(0,n.kt)("inlineCode",{parentName:"li"},"DelegationsFor")," query in step 3), a map of\nall validator delegators could be prebuild, by using ",(0,n.kt)("inlineCode",{parentName:"li"},"DelegationTo")," for each\nof the validators. Even with the efficient ",(0,n.kt)("inlineCode",{parentName:"li"},"DelegationsFor")," query, this can be\nbeneficial IF the number of voters is large.")),(0,n.kt)("p",null,"This procedure iterates over all voters and can be beneficial if the number of\nvoters is relatively low compared to the number of all validator delegators."),(0,n.kt)("h4",{id:"alternative-vote-tallying-procedures"},"Alternative Vote Tallying procedures"),(0,n.kt)("p",null,"A possible alternative would be to iterate over the delegators-validator sets:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"# Delegators-validator pass approach.\n1 Precompute stakes for all delegators to validators from shares.\n2 For each validator\n3   For each delegator to the validator\n4     IF validator and delegators votes match (or delegator didn't vote)\n5       Add delegator stake to the validator's vote (or nothing if validator didn't vote)\n6     IF validator and delegator vote don't match\n7       Add delegator stake to the delegator's vote (or nothing if delegator didn't vote)\n")),(0,n.kt)("p",null,"The voting procedure now iterates over all delegators of the active validator\nset. The amount of work is somewhat predictable as it doesn't depend on the\nnumber of voters but on the delegators-to-validator sets. However the number of\nvotes is bound by the size of the delegators-to-validator set and in realistic\nscenario likely much smaller."),(0,n.kt)("h4",{id:"implementations-in-other-chains"},"Implementations in other chains"),(0,n.kt)("p",null,"Cosmos-SDK uses a similar approach to the proposed solution in the ADR. The\ntallying iterates over voters, their delegations and validators. For detailed\nimplementation see: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/dc004c85f2e8b8fb4f66caac2703228c5bf544cf/x/gov/keeper/tally.go#L37-L90"},"Cosmos-SDK Vote Tallying Code"),". The voting itself is\nlimited to delegators (similar as proposed in this document)."),(0,n.kt)("h4",{id:"benchmarks"},"Benchmarks"),(0,n.kt)("p",null,"The Vote Tallying procedure variants were benchmarked on mainnet data."),(0,n.kt)("p",null,"Some basic stats from mainnet:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"120 validators"),(0,n.kt)("li",{parentName:"ul"},"~49500 eligible voters (unique delegators to validators)"),(0,n.kt)("li",{parentName:"ul"},"average number of delegations-to per account is 1")),(0,n.kt)("p",null,"The variants were benchmarked in scenarios with different number of voters. In\nall scenarios the mainnet consensus state was used, only the number of\n(simulated) voters varied. All votes were eligible (had at least one delegation\nto an active validator) and all of the delegator votes did override the\nvalidator votes."),(0,n.kt)("p",null,"The three tested variants were:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'"Two pass over voters (optimized DelegationsFor)" - as described in the\nproposed Vote tallying solution. Reverse mapping key is used for the\n',(0,n.kt)("inlineCode",{parentName:"li"},"DelegationsFor")," queries (described in Casting Votes section)."),(0,n.kt)("li",{parentName:"ul"},'"Two pass over voters (pre-build validator escrow)" - as described in the\nproposed Vote tallying solution with modification of prebuilding a map of all\nvalidator delegators (mentioned in the "Possible variant" section).'),(0,n.kt)("li",{parentName:"ul"},'"Validator-delegators" - as described in the alternatives section.')),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Two pass over voters (optimized DelegationsFor)",src:a(9605).Z,width:"720",height:"576"}),"\n",(0,n.kt)("img",{alt:"Two pass over voters (pre-build validators escrow)",src:a(8054).Z,width:"720",height:"576"}),"\n",(0,n.kt)("img",{alt:"Validator-delegators",src:a(9581).Z,width:"720",height:"576"})),(0,n.kt)("p",null,"The above results show that:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Two-pass approach (querying ",(0,n.kt)("inlineCode",{parentName:"li"},"DelegationsFor")," for every voter) is fastest up to\nabout 25000 voters for a proposal. In the worst case (every eligible voter\nvoted) it is about twice as slow as the alternatives. In that case the\ntallying took about 3 seconds."),(0,n.kt)("li",{parentName:"ul"},'The two-pass approach using pre-built map of all validator delegators is\ncomparable to the "Validator-delegators" procedure. This makes sense as in\nboth cases the main work is done in querying the delegators of validators.')),(0,n.kt)("p",null,"In reality, the number of voters will likely be small compared to the eligible\nset of all delegators, so the two-pass approach (with querying ",(0,n.kt)("inlineCode",{parentName:"p"},"DelegationsFor"),"\nfor every voter) seems to make the most sense."),(0,n.kt)("p",null,"If number of voters ever becomes problematic, the method could also implement a\nheuristic to use the prebuilt validator-delegators map when the number of voters\nis large (e.g. number of voters > 1/2 eligible delegators), but at the moment\nthere is no efficient way to query the number of all delegators."),(0,n.kt)("h3",{id:"pruning"},"Pruning"),(0,n.kt)("p",null,"With the possibility of increased number of votes per proposal a pruning of\nvotes can be implemented. Votes for a proposal can be pruned as soon as the\nfirst block after the proposal is closed. Because proposal is closed in the\n",(0,n.kt)("inlineCode",{parentName:"p"},"EndBlock")," state (which includes votes received in this last block), the pruning\nshould not be done before the block after, so that the exact state at the time\nof the closing can be queried."),(0,n.kt)("h3",{id:"voting-via-messages"},"Voting via messages"),(0,n.kt)("p",null,"Delegator can also be a runtime. For enabling runtimes to vote, casting votes\nshould also be supported via runtime messages."),(0,n.kt)("p",null,"Roothash message type is updated to include governance message field:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'type Message struct {\n  Staking    *StakingMessage    `json:"staking,omitempty"`\n  Registry   *RegistryMessage   `json:"registry,omitempty"`\n  Governance *GovernanceMessage `json:"governance,omitempty"`\n}\n\n// GovernanceMessage is a governance message that allows a runtime to perform governance operations.\ntype GovernanceMessage struct {\n  cbor.Versioned\n\n  CastVote *governance.ProposalVote `json:"cast_vote,omitempty"`\n}\n')),(0,n.kt)("p",null,"Governance backend is updated to handle the cast vote message."),(0,n.kt)("p",null,"For completeness, support for submitting proposals via runtime messages can also\nbe implemented."),(0,n.kt)("h2",{id:"consequences"},"Consequences"),(0,n.kt)("h3",{id:"positive"},"Positive"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Delegators are able to override validators vote. In the case of unresponsive\nvalidators this increases the voting participation."),(0,n.kt)("li",{parentName:"ul"},"Delegators are able to vote with their own stake."),(0,n.kt)("li",{parentName:"ul"},"(if implemented) Staking ",(0,n.kt)("inlineCode",{parentName:"li"},"DelegationsFor")," queries are now efficient and don't\nrequire scanning the full delegations state.")),(0,n.kt)("h3",{id:"negative"},"Negative"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This increases the complexity of the vote tallying procedure."),(0,n.kt)("li",{parentName:"ul"},"This increases the size of the governance votes state."),(0,n.kt)("li",{parentName:"ul"},"This increases the complexity and size of the consensus staking state if the\n",(0,n.kt)("inlineCode",{parentName:"li"},"DelegationsFor")," reverse mapping is implemented.")),(0,n.kt)("h3",{id:"neutral"},"Neutral"))}c.isMDXComponent=!0},9605:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/0020-bench1-b406915bd71a67020495939d2c89075b.png"},8054:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/0020-bench2-1cc7812d2c015e4a03288cc6f165bb4e.png"},9581:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/0020-bench3-8741906103d267c9119ac66826d39bd1.png"}}]);